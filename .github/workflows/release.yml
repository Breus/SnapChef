name: Release to snapchef.blaauwendraad.dev

on:
  release:
    types: [ created ]
  workflow_dispatch:

env:
  GHCR_REPO: ghcr.io/breus/snapchef
  VERSION: ${{ github.event.release.tag_name || github.sha }}

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write

    steps:
      - name: Validate required secrets
        run: |
          if [ -z "${{ secrets.VPS_HOST }}" ] || [ -z "${{ secrets.VPS_USER }}" ] || [ -z "${{ secrets.VPS_SSH_KEY }}" ]; then
            echo "Error: Missing required secrets for VPS deployment"
            exit 1
          fi
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10

      - name: Install UI dependencies
        run: |
          cd ui
          pnpm install

      - name: Build frontend
        run: |
          cd ui
          pnpm build
          echo "Frontend build output:"
          ls -la dist/

      - name: Copy frontend to Quarkus static resources directory and create directory
        run: |
          mkdir -p app/src/main/resources/META-INF/resources/
          cp -r ui/dist/* app/src/main/resources/META-INF/resources/
          ls -la app/src/main/resources/META-INF/resources/

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'
          cache: 'gradle'

      - name: Build Quarkus Application
        run: |
          cd app
          ./gradlew build -x test
          echo "Build artifacts:"
          ls -la build/quarkus-app/

      - name: Prepare folders and generate keys
        run: |
          python3 ./key_setup.py
          echo "Keys generated:"
          ls -la app/src/main/resources/META-INF/

      - name: Run Tests
        run: |
          cd app
          ./gradlew test

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push PostgreSQL image
        uses: docker/build-push-action@v6
        with:
          context: ./
          file: ./app/src/main/docker/Dockerfile.postgres
          push: true
          tags: ${{ env.GHCR_REPO }}/postgres:${{ env.VERSION }}
          build-args: |
            POSTGRES_USER=quarkus_user
            POSTGRES_DB=recipe_book
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Build and push Quarkus backend image
        uses: docker/build-push-action@v6
        with:
          context: ./
          file: ./app/src/main/docker/Dockerfile.jvm
          push: true
          tags: ${{ env.GHCR_REPO }}/backend:${{ env.VERSION }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Create production docker-compose file for release
        run: |
          cat > docker-compose.prod.yml << EOF
          version: '3.9'
          services:
            postgres:
              image: ${{ env.GHCR_REPO }}/postgres:${{ env.VERSION }}
              environment:
                POSTGRES_USER: quarkus_user
                POSTGRES_PASSWORD: \${POSTGRES_PASSWORD}
                POSTGRES_DB: recipe_book
              volumes:
                - pg_data:/var/lib/postgresql/data
              ports:
                - "5432:5432"
            quarkus_app:
              image: ${{ env.GHCR_REPO }}/backend:${{ env.VERSION }}
              environment:
                QUARKUS_DATASOURCE_JDBC_URL: jdbc:postgresql://postgres:5432/recipe_book
                QUARKUS_DATASOURCE_USERNAME: quarkus_user
                QUARKUS_DATASOURCE_PASSWORD: \${POSTGRES_PASSWORD}
                QUARKUS_HTTP_PORT: 8081
              ports:
                - "8081:8081"
              depends_on:
                - postgres
          volumes:
            pg_data:
          EOF

      - name: Attach docker-compose file to release
        if: github.event_name == 'release'
        uses: softprops/action-gh-release@v2
        with:
          files: docker-compose.prod.yml

      - name: Deploy to VPS
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.VPS_SSH_KEY }}
          script: |
            mkdir -p /opt/snapchef
            # Write docker-compose.prod.yml to /opt/snapchef
            cat > /opt/snapchef/docker-compose.prod.yml << EOF
            version: '3.9'
            services:
              postgres:
                image: ${{ env.GHCR_REPO }}/postgres:${{ env.VERSION }}
                environment:
                  POSTGRES_USER: quarkus_user
                  POSTGRES_PASSWORD: \${POSTGRES_PASSWORD}
                  POSTGRES_DB: recipe_book
                volumes:
                  - pg_data:/var/lib/postgresql/data
                ports:
                  - "5432:5432"
              quarkus_app:
                image: ${{ env.GHCR_REPO }}/backend:${{ env.VERSION }}
                ports:
                  - "8081:8081"
                depends_on:
                  - postgres
            volumes:
              pg_data:
            EOF
            cd /opt/snapchef
            docker login ghcr.io -u ${{ secrets.GHCR_USERNAME }} -p ${{ secrets.GHCR_PAT }}
            docker pull ${{ env.GHCR_REPO }}/postgres:${{ env.VERSION }}
            docker pull ${{ env.GHCR_REPO }}/backend:${{ env.VERSION }}
            docker compose -p snapchef -f docker-compose.prod.yml up -d