name: Publish Docker Images to VPS

on:
  release:
    types: [created]
  workflow_dispatch:

env:
  GHCR_REPO: ghcr.io/breus
  VERSION: ${{ github.event.release.tag_name || github.sha }}

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      packages: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push PostgreSQL image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./app/src/main/docker/Dockerfile.postgres
          push: true
          tags: ${{ env.GHCR_REPO }}/postgres:${{ env.VERSION }}
          build-args: |
            POSTGRES_USER=quarkus_user
            POSTGRES_DB=recipe_book
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Build and push Quarkus backend image
        uses: docker/build-push-action@v6
        with:
          context: ./app
          file: ./app/src/main/docker/Dockerfile.jvm
          push: true
          tags: ${{ env.GHCR_REPO }}/backend:${{ env.VERSION }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Build and push frontend image
        uses: docker/build-push-action@v6
        with:
          context: ./ui
          file: ./ui/Dockerfile
          push: true
          tags: ${{ env.GHCR_REPO }}/frontend:${{ env.VERSION }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Deploy to VPS
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.VPS_SSH_KEY }}
          script: |
            # Pull latest images
            docker login ghcr.io -u ${{ secrets.GHCR_USERNAME }} -p ${{ secrets.GHCR_PAT }}
            docker pull $GHCR_REPO/postgres:${VERSION}
            docker pull $GHCR_REPO/backend:${VERSION}
            docker pull $GHCR_REPO/frontend:${VERSION}

            # Write docker-compose.prod.yml
            cat > docker-compose.prod.yml << EOF
            version: '3.9'
            services:
              postgres:
                image: $GHCR_REPO/postgres:${VERSION}
                environment:
                  POSTGRES_USER: quarkus_user
                  POSTGRES_PASSWORD: \${POSTGRES_PASSWORD}
                  POSTGRES_DB: recipe_book
                volumes:
                  - pg_data:/var/lib/postgresql/data
                ports:
                  - "5432:5432"
              quarkus_app:
                image: $GHCR_REPO/backend:${VERSION}
                environment:
                  QUARKUS_DATASOURCE_JDBC_URL: jdbc:postgresql://postgres:5432/recipe_book
                  QUARKUS_DATASOURCE_USERNAME: quarkus_user
                  QUARKUS_DATASOURCE_PASSWORD: \${POSTGRES_PASSWORD}
                  QUARKUS_HTTP_PORT: 8080
                ports:
                  - "8080:8080"
                depends_on:
                  - postgres
              frontend:
                image: $GHCR_REPO/frontend:${VERSION}
                ports:
                  - "80:80"
                depends_on:
                  - quarkus_app
            volumes:
              pg_data:
            EOF

            # Start or restart containers
            docker compose up -d
